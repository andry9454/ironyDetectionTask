"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.promptText = promptText;
exports.PromptBuffer = exports.Prompt = void 0;

var _style = _interopRequireDefault(require("styled-jsx/style"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

/**
 * Generate what text goes inside the prompt based on the props to the prompt
 */
function promptText(props) {
  if (props.running) {
    return "[*]";
  }

  if (props.queued) {
    return "[â€¦]";
  }

  if (typeof props.counter === "number") {
    return "[".concat(props.counter, "]");
  }

  return "[ ]";
}

var Prompt =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Prompt, _React$Component);

  function Prompt() {
    (0, _classCallCheck2.default)(this, Prompt);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Prompt).apply(this, arguments));
  }

  (0, _createClass2.default)(Prompt, [{
    key: "render",
    value: function render() {
      return React.createElement(React.Fragment, null, React.createElement("div", {
        className: "jsx-2438703975" + " " + "prompt"
      }, this.props.blank ? null : promptText(this.props)), React.createElement(_style.default, {
        styleId: "2438703975",
        css: ".prompt.jsx-2438703975{font-family:monospace;font-size:12px;line-height:22px;width:var(--prompt-width,50px);padding:9px 0;text-align:center;color:var(--theme-cell-prompt-fg,black);background-color:var(--theme-cell-prompt-bg,#fafafa);}"
      }));
    }
  }]);
  return Prompt;
}(React.Component);

exports.Prompt = Prompt;
(0, _defineProperty2.default)(Prompt, "defaultProps", {
  counter: null,
  running: false,
  queued: false,
  blank: false
});

var PromptBuffer = function PromptBuffer() {
  return React.createElement(Prompt, {
    blank: true
  });
};

exports.PromptBuffer = PromptBuffer;